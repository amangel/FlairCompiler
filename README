README File for Flair Compiler

Written by Aaron Mangel
	   Zach Abbott
	   Zan Preston

Current State of Compiler
	
      >>scanner                   -- due Friday, February 10
        parser, step 1            -- due Friday, February 24
        parser, step 2            -- due Friday, March 9
        semantic checker          -- due Friday, March 30
        code generator, step 1    -- due Friday, April 13
        code generator, step 2    -- due Friday, April 27

Usage:
	javac Driver.java  		--To compile the scanner
	java driver path/to/filename    --To Execute where path/to/filename is path
				             to your Flair Program



SCANNER
	The primary class for the scanner is CompilerStateScanner  It scans its input 
	on a by-character basis. It begins in a start state, and then determines if
	the following character is a valid state transition while also determining
	the type of token being created. Once an invalid state transition is
	detected, it breaks off what it has so far and attempts to make a valid
	token out of it	(i.e. check if it is a valid integer, identifier, etc.).

	LexicalException is thrown for an illegal token detected in the input
	Flair Program.
